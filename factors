#!/usr/bin/python3

import time
import math
import sys

def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = 2
    y = 2
    d = 1

    def f(x):
        return (x**2 + 1) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x - y), n)

    return d if d != n else None

def factorize_file(file_path):
    try:
        with open(file_path, 'r') as file:
            numbers = file.readlines()

        for number in numbers:
            num = int(number.strip())
            factor = pollard_rho(num)

            if factor == num:
                print(f"{num} is prime.")
            else:
                print(f"{num}={factor}*{num // factor}")

    except FileNotFoundError:
        print(f"File '{file_path}' not found.")

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: ./factors <file>")
        sys.exit(1)

    file_path = sys.argv[1]

    start_time = time.time()
    factorize_file(file_path)
    elapsed_time = time.time() - start_time

    if elapsed_time > 5:
        print("Error or time limit exceeded")
        sys.exit(1)
